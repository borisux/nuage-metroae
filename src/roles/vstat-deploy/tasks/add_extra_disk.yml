- block:

  - name: Create extra disk partition
    parted:
      device: "/dev/{{ extra_disk_device }}"
      number: 1
      state: present
      label: gpt
      part_end: "{{ extra_disk_size_gb }}GB"
      unit: GB

  - name: Format extra disk partition
    filesystem:
      dev: "/dev/{{ extra_disk_device }}1"
      fstype: ext4

  # - name: Create extra disk partition
  #   command: "parted -s /dev/{{ extra_disk_device }}  mklabel gpt  mkpart primary 0GB {{ extra_disk_size_gb }}GB"
  #
  # - name: Format extra disk partition
  #   command: "mkfs.ext4 /dev/{{ extra_disk_device }}1"

  - name: Create extra disk mount point directory
    file:
      path: "{{ extra_disk_mount_point }}"
      state: directory

  - name: Copy files to mount point
    copy:
      src: "/var/lib/elasticsearch"
      dest: "{{ extra_disk_mount_point }}/"
      remote_src: yes

  - name: Mount the extra disk
    mount:
      src: "/dev/{{ extra_disk_device }}1"
      path: "{{ extra_disk_mount_point }}"
      fstype: ext4
      state: mounted

  # - name: Mount the extra disk
  #   # noqa 303
  #   command: "mount /dev/{{ extra_disk_device }}1 {{ extra_disk_mount_point }}"
  #
  # - name: Update fstab to preserve extra disk on reboot
  #   lineinfile:
  #     path: /etc/fstab
  #     line: "/dev/{{ extra_disk_device }}1 {{ extra_disk_mount_point }}  ext4 defaults 0 0"
  #     insertafter: EOF

  - name: Verify mount was successful
    setup: filter=ansible_mounts
    register: mounts

  - name: Get mount device
    set_fact:
      mount_device: "{{ item.device }}"
    with_items: "{{ mounts.ansible_facts.ansible_mounts }}"
    when: extra_disk_mount_point | regex_replace('\\/$', '') in item.mount

  - name: Verify mount device is correct
    assert:
      that: mount_device is match(extra_disk_device)
      msg: "{{ extra_disk_mount_point }} is not mounted on {{ extra_disk_device }}. Please try again."

  - block:

    - name: Verify elasticsearch is stopped
      systemd:
        state: stopped
        name: elasticsearch

    - name: Update data directory for elasticsearch
      lineinfile:
        path: /etc/sysconfig/elasticsearch
        line: "DATA_DIR={{ extra_disk_mount_point }}/elasticsearch"
        regexp: 'DATA_DIR='

    - name: Remove previous data directory
      file:
        path: /var/lib/elasticsearch
        state: absent

    remote_user: "{{ vstat_default_username }}"
    when: groups['data_vstats'] is defined and inventory_hostname in groups['data_vstats']

  - name: Set ownership for the extra disk
    file:
      path: "{{ extra_disk_mount_point }}"
      recurse: yes
      state: directory
      owner: elasticsearch
      group: elasticsearch

  # - name: Set ownership for the extra disk
  # # noqa 302
  #   command: "chown -R elasticsearch:elasticsearch {{ extra_disk_mount_point }}"

  when: add_extra_disk | default(False)
  remote_user: "{{ vstat_default_username }}"
