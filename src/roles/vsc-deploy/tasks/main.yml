- name: Clean known_hosts of VSCs (ignoring errors)
  known_hosts:
    name: "{{ mgmt_ip }}"
    state: absent
  delegate_to: localhost
  no_log: True
  ignore_errors: True

- name: Create empty VPRN object
  set_fact:
    vprn_object_list: []

- block:

  - name: Add Control IP VPRN and VLAN (to be deprecated)
    set_fact:
      legacy_vprn: [{
        "vlan": "{{ vlan_id }}",
        "ipaddr": "{{ '' if control_ip_vprn is not defined else control_ip_vprn }}",
        "netmask_length": "{{ '24' }}"
      }]

  - name: Add VPRN object to the object list
    set_fact:
      vprn_object_list: '{{ vprn_object_list + legacy_vprn }}'

  when: vlan_id is defined

- name: Fill up VPRN Object list from deployment
  include: create_vprn_list.yml vprn={{ item|string }}
  with_items: "{{ ctrl_ip_vprn_list | default([]) }}"

- import_tasks: openstack.yml
  when: target_server_type is match("openstack")
  tags:
    - vsc
    - openstack
    - vsc-deploy

- block:

  - import_tasks: setup_vsc_config.yml
    vars:
      config_template: config.cfg.j2
      reboot_vsc: true
    tags:
      - vsc
      - vsc-deploy

  - name: Reset connections for sros_config after reboot
    meta: reset_connection

  when: target_server_type is match("kvm") or target_server_type is match("vcenter") or target_server_type is match("openstack") or target_server_type is match("none")

- name: Get vsd node(s) information
  import_role:
    name: common
    tasks_from: vsd-node-info.yml
  vars:
    vsd_hostname: "{{ vsd_fqdn }}"
  run_once: true

- name: Enable ejmode to allow on vsds
  include_role:
    name: common
    tasks_from: allow-ejmode.yml
  loop_control:
    loop_var: vsd
  with_items: "{{ vsd_hostname_list }}"

- name: Optionally setup XMPP TLS
  include_role:
    name: common
    tasks_from: vsc-tls-setup

- name: Optionally apply specified configs
  include_role:
    name: common
    tasks_from: vsc-apply-config

- block:
  - name: Add VSC Custom User
    sros_config:
      lines:
        - /configure system security user {{ vsc_custom_username }} password {{ vsc_custom_password }} 
        - /configure system security user {{ vsc_custom_username }} console member "administrative"
        - /configure system security user {{ vsc_custom_username }} access console
        - admin save
      provider: "{{ vsc_creds }}"
    no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
    when: vsc_custom_username is defined | default(false)
  
  - meta: reset_connection
  
  - name: Remove admin access
    sros_config:
      lines:
        - /configure system security user "admin" no access console
      provider: "{{ vsc_creds }}"
    when: 
      - vsc_custom_username is defined | default(false)
      - not keep_root_access | default(false)
      
  delegate_to: "localhost"