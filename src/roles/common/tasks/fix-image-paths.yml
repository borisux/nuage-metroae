---
- name: Get unzipped files dir
  set_fact:
    nuage_unzipped_files_dir: "{{ common.nuage_unzipped_files_dir }}"

- name: Replace non-relative path
  set_fact:
    nuage_unzipped_files_dir: "{{ nuage_unzipped_files_dir | regex_replace('.+?(?=metroae_data)', '/') }}"
  when: common.nuage_unzipped_files_dir | regex_search("/metroae_data/") and role_path | regex_search("^/source/nuage-metroae")

- name: Replace relative path
  set_fact: 
    nuage_unzipped_files_dir: "{{ '/metroae_data/' + nuage_unzipped_files_dir }}"
  when: common.nuage_unzipped_files_dir | regex_search("^[^/]") and role_path | regex_search("^/source/nuage-metroae")

- name: Check if directory needs to be specified to be under metroae_data installation mount directory
  assert:
    that:
    - common.nuage_unzipped_files_dir | regex_search("/metroae_data/")
    fail_msg: The directory needs to be specified under the /metroae_data/ installation mount directory from the container installation
  when: role_path | regex_search("^/source/nuage-metroae")

- name: Get stats of resulting path
  stat: 
    path: "{{ nuage_unzipped_files_dir }}"
  register: sym
  ignore_errors: True

- name: Check resulting path validity
  assert:
    that:
    - sym.stat.exists
    fail_msg: "MetroAE unzipped files directory path: {{ nuage_unzipped_files_dir }} is invalid"
