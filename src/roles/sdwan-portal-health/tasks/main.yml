- name: Wait for PORTAL VM ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ mgmt_ip }}"
    host_username: "{{ portal_default_username }}"

- block:

  - name: Get running container IDs
    shell: docker ps -q
    register: all_running_container_ids

  - name: Get all container IDs
    shell: docker ps -qa
    register: all_container_ids

  - name: Set fact for exited container ID(s)
    set_fact:
      exited_container_ids: "{{ all_container_ids.stdout_lines | difference(all_running_container_ids.stdout_lines) }}"

  - name: Check Portal endpoint health (ignoring errors)
    uri:
      url: https://localhost/vnsportal/health
      method: GET
      validate_certs: False
    no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
    register: curl_output
    until: curl_output.status == 200
    retries: 30
    delay: 5
    ignore_errors: true

  - name: Set fact if unable to reach health endpoint
    set_fact:
      health_endpoint_unreachable: True
    when: curl_output.status != 200

  - name: Fail if health endpoint is unreachable
    fail:
      msg: "Health endpoint is unreachable. Please try again."
    when:
      - health_endpoint_unreachable is defined
      - portal_sa_or_ha is match('sa')

  - block:

    - name: Check if cluster bootstrap log already exists
      stat:
        path: /tmp/vnsportal_cluster_bootstrap.log
      register: cluster_bootstrap_log_exists

    - block:

      - name: Collect output of cluster bootstrap log
        shell: cat /tmp/vnsportal_cluster_bootstrap.log
        register: cluster_bootstrap_log_contents

      - name: Set fact for errors in docker logs
        set_fact:
          docker_log_failures: True
        when: cluster_bootstrap_log_contents.stdout.find("[ERROR]") != -1

      when: cluster_bootstrap_log_exists.stat.exists

    - name: Check cluster health
      shell: "/opt/vnsportal/cluster_check.sh {{ portal_database_default_username }} {{ portal_database_default_password }}"
      no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"

    - name: Fail if there were errors in docker logs
      fail:
        msg: "There were errors during the portal upgrade. Check 'docker logs vnsportal-cluster-bootstrap' for more details. You can roll back to the previously installed Portal(s) version using 'metroae rollback portal'"
      when: docker_log_failures is defined or health_endpoint_unreachable is defined

    when: portal_sa_or_ha is match('ha')

  - name: Fail if not all docker containers are running
    fail:
      msg: "Container(s) with ID(s): {{ exited_container_ids | list | to_json }} should be running."
    when: exited_container_ids | length > 0

  remote_user: "{{ portal_default_username }}"
