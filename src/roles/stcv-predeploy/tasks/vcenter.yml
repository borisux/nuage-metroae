---
- name: Finding VM folder (ignoring errors)
  connection: local
  vmware_guest_find:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    datacenter: "{{ vcenter.datacenter }}"
    name: "{{ hostname }}"
    validate_certs: no
  register: stcv_vm_folder
  ignore_errors: on

- name: Gathering info on VM (ignoring errors)
  connection: local
  vmware_guest_info:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    datacenter: "{{ vcenter.datacenter }}"
    folder: "/{{ vcenter.datacenter }}{{ stcv_vm_folder['folders'][0] }}"
    name: "{{ hostname }}"
    validate_certs: no
  register: stcv_vm_facts
  ignore_errors: on
  when: stcv_vm_folder is succeeded

- debug: var=stcv_vm_facts verbosity=1

- name: Verify the STCv VM does not exist
  assert:
    that: "stcv_vm_facts.failed"
    msg: "VM {{ hostname }} already exists, quiting"

- name: Configure vCenter path
  set_fact:
    vcenter_path: "vi://'{{ vcenter.username | urlencode }}':'\
      {{ vcenter.password | urlencode }}'@{{ target_server }}/\
      {{ vcenter.datacenter }}/host/\
      {{ (vcenter.host_clusters_folder != 'NONE') | ternary (vcenter.host_clusters_folder + '/' | urlencode, '') }}{{ vcenter.cluster }}"

- name: Update vCenter path if resource pool is configured
  set_fact:
    vcenter_path: "vi://'{{ vcenter.username | urlencode }}':'\
      {{ vcenter.password | urlencode }}'@{{ target_server }}/\
      {{ vcenter.datacenter }}/host/\
      {{ (vcenter.host_clusters_folder != 'NONE') | ternary (vcenter.host_clusters_folder + '/' | urlencode, '') }}{{ vcenter.cluster }}/\
      Resources/{{ vcenter.resource_pool | urlencode }}"
  when: vcenter.resource_pool != 'NONE'

- name: Deploy NSGv image on vCenter
  include_role:
    name: common
    tasks_from: vcenter-deploy-image
  vars:
    vcenter_stcv_deploy: True

- name: Waiting until VMware tools becomes available
  connection: local
  vmware_guest_tools_wait:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    name: "{{ hostname }}"
    datacenter: "{{ vcenter.datacenter }}"
    validate_certs: no
  register: stcv_vm_facts

- debug: var=stcv_vm_facts verbosity=1

